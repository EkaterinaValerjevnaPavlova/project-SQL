/*
1. Основы реляционной модели и SQL
*/
-- Создание таблицы
CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8, 2),
    amount INT
);
-- Вставка записи в таблицу
INSERT INTO book  (title,author,price,amount) 
VALUES ('Мастер и Маргарита','Булгаков М.А.','670.99','3');
SELECT * FROM book;

INSERT INTO book  (title,author,price,amount) VALUES ('Белая гвардия','Булгаков М.А.','540.50','5');
INSERT INTO book  (title,author,price,amount) VALUES ('Идиот','Достоевский Ф.М.','460.00','10');
INSERT INTO book  (title,author,price,amount) VALUES ('Братья Карамазовы','Достоевский Ф.М.','799.01','2');
INSERT INTO book  (title,author,price,amount) VALUES ('Стихотворения и поэмы','Есенин С.А.','650.00','15');
INSERT INTO book  (title,author,price,amount) VALUES ('Игрок','Достоевский Ф.М.','480.50','10');
SELECT * FROM book;
 
-- 1.2 Выборка данных
-- Выбрать авторов, название книг и их цену из таблицы book
SELECT author, title, price FROM book;

/* Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним) Название, для поля author –  Автор*/
SELECT title AS Название,  author AS Автор 
FROM book;

/*
Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. Посчитать стоимость упаковки 
для каждой книги (сколько денег потребуется, чтобы упаковать все экземпляры книги). В запросе вывести название книги, 
ее количество и стоимость упаковки, последний столбец назвать pack. 
*/
SELECT title, amount, 
     amount * 1.65 AS pack 
FROM book;

/*
В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. Написать SQL запрос, который из таблицы book выбирает названия, 
авторов, количества и вычисляет новые цены книг. Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.
*/
SELECT title,author,amount,
    ROUND(price-(price*0.3), 2) AS new_price 
FROM book;

/*
При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. 
Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. 
Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. 
Значение округлить до двух знаков после запятой.
*/
SELECT author, title,
    ROUND(IF(author = 'Булгаков М.А.', price+(price * 0.1), IF(author = 'Есенин С.А.', price+(price * 0.05), price)), 2) AS new_price
FROM book;

/*
Вывести автора, название  и цены тех книг, количество которых меньше 10.
*/
SELECT author, title, price 
FROM book
WHERE amount < 10;

/*
Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих 
книг больше или равна 5000.
*/
SELECT title, author, price, amount 
FROM book
WHERE (price < 500 OR price > 600) AND price*amount >= 5000;

/*
Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  
а количество или 2, или 3, или 5, или 7 .
*/
SELECT title, author 
FROM book
WHERE (price BETWEEN 540.50 AND 800) and (amount=2 or amount=3 or amount=5 or amount=7);

/*
Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). 
Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
*/
select author, title
from book
where amount between 2 and 14
order by 1 DESC, 2;

/*
Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и 
инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
Информацию отсортировать по названию книги в алфавитном порядке.
*/
select title, author
from book
where title like "_% %" and (author like "%С.%")
order by title;

-- 1.3 Запросы, групповые операции

/*
Отобрать различные (уникальные) элементы столбца amount таблицы book.
*/
select distinct amount
from book;

/*
Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
*/
select author as Автор,count(distinct title) as Различных_книг, sum(amount) as Количество_экземпляров
from book
group by author;

/*
Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.
*/
select author, min(price) as Минимальная_цена, max(price) as Максимальная_цена , avg(price) as Средняя_цена 
from book
group by author;

/*
Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет 18% (k=18),  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой. В запросе для расчета НДС(tax)  и Стоимости без НДС(S_without_tax) использовать следующие формулы:
*/
select author, ROUND(sum(price*amount),2) AS Стоимость, ROUND((sum(price*amount)*(18/100))/(1+18/100),2) AS НДС, 
       ROUND(sum(price*amount)/(1+18/100),2) AS Стоимость_без_НДС
from book
group by author;

/*
Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
Пояснение. В задании нужно посчитать среднюю цену уникальных книг на складе, а не среднюю цену всех экземпляров книг.
*/
select min(price) as Минимальная_цена, max(price) as Максимальная_цена, 
       ROUND((avg(distinct(price))),2) as Средняя_цена
from book;

/*
Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
*/
select round(avg(price),2) as Средняя_цена, round(sum(price*amount),2) as Стоимость
from book
where amount between 5 and 14;

/*
Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.
*/
select author, sum(price*amount) as Стоимость
from book
where title != 'Идиот' and title != 'Белая гвардия'
group by author
having sum(price*amount)>5000
order by Стоимость desc;

-- 1.4 Вложенные запросы
/*
Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
*/
select author, title, price
from book
where price <=(select avg(price) from book)
order by price desc;

/*
Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
*/
select author, title, price
from book
where (price-(select min(price) from book))<=150
order by price;

/*
Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
*/
select author, title, amount
from book
where amount in
        (select amount
         from book
         group by amount
         having count(amount)=1);

/*
Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.
*/
select author,title, price
from book
where price < any (select min(price)
                   from book
                   group by author);

/*
Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.
*/
select title, author, amount, 
       ((select max(amount) from book) - amount) as Заказ
from book
where amount not in (select max(amount) from book);


-- 1.5 Запросы корректировки данных
/*
Создать таблицу поставка (supply), которая имеет ту же структуру, что и таблиц book.
*/
CREATE TABLE supply(
    supply_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8, 2),
    amount INT
);
select * from supply;

/*
Занесите в таблицу supply четыре записи.
*/
INSERT INTO supply(title, author, price, amount) 
VALUES 
    ('Лирика','Пастернак Б.Л.', 518.99, 2),
    ('Черный человек','Есенин С.А.', 570.20, 6),
    ('Белая гвардия','Булгаков М.А.', 540.50, 7),
    ('Идиот', 'Достоевский Ф.М.', 360.80, 3);
    
 -- Добавление записей из другой таблицы

/*
Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
*/
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
where author != 'Булгаков М.А.' and author != 'Достоевский Ф.М.';

SELECT * FROM book;

/*
Занести из таблицы supply в таблицу book только те книги, названия которых отсутствуют в таблице book
*/
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE title NOT IN (
        SELECT title 
        FROM book
      );

SELECT * FROM book;

/*

*/















































